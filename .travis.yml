language: android
dist: trusty
# Ensure Apache Ant is installed
# (though trusty should come with this installed)
addons:
  apt:
    packages:
      - ant
android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    - tools
    - platform-tools


    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository

    # Specify at least one system image, 
    # if you need to run emulator(s) during your tests

    # The system image we will test on
    - sys-img-x86-android-26
    - android-22
    - sys-img-armeabi-v7a-android-22
    - sys-img-armeabi-v7a-android-17

  licenses:
    - '.+'
    - 'android-sdk-preview-license-.+'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'

before_install:
  - mkdir "$ANDROID_HOME/licenses" || true
  - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
  - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
  - yes | sdkmanager "platforms;android-29"
  - yes | sdkmanager "build-tools;29.0.3"


before_script:
  # Emulator Management: Create, Start and Wait
  # List ABI targets to troubleshoot ABI target issues
  - android list targets

  # Create, launch, unlock emulator
  - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a -c 100M
  - emulator -avd test -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &

script:
    # Set permission for gradle script
    - chmod +x gradlew

    # Gradle command to run unit tests
    # that run on the JVM
    - ./gradlew test

    # Gradle command to run instrumentation tests
    # located in module-name/src/androidTest/java/
    - ./gradlew connectedAndroidTest